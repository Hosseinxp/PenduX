// Generated by view binder compiler. Do not edit!
package com.learning.pendu_x.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.learning.pendu_x.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPageUserAccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnPageUserAccountChangeInfo;

  @NonNull
  public final Button btnPageUserAccountChangePassword;

  @NonNull
  public final Button btnPageUserAccountSignOut;

  @NonNull
  public final ImageView imgPageUserAccountUserPic;

  @NonNull
  public final ImageView imgPageUserAccountXCoinsLogo;

  @NonNull
  public final ImageButton imgbPageUserAccountBack;

  @NonNull
  public final TextView txtPageUserAccountEmail;

  @NonNull
  public final TextView txtPageUserAccountEmailTitle;

  @NonNull
  public final TextView txtPageUserAccountLosts;

  @NonNull
  public final TextView txtPageUserAccountLostsCounter;

  @NonNull
  public final TextView txtPageUserAccountPhoneNumber;

  @NonNull
  public final TextView txtPageUserAccountPhoneNumberTitle;

  @NonNull
  public final TextView txtPageUserAccountUsername;

  @NonNull
  public final TextView txtPageUserAccountWins;

  @NonNull
  public final TextView txtPageUserAccountWinsCounter;

  @NonNull
  public final TextView txtPageUserAcoountXCoins;

  private ActivityPageUserAccountBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnPageUserAccountChangeInfo,
      @NonNull Button btnPageUserAccountChangePassword, @NonNull Button btnPageUserAccountSignOut,
      @NonNull ImageView imgPageUserAccountUserPic, @NonNull ImageView imgPageUserAccountXCoinsLogo,
      @NonNull ImageButton imgbPageUserAccountBack, @NonNull TextView txtPageUserAccountEmail,
      @NonNull TextView txtPageUserAccountEmailTitle, @NonNull TextView txtPageUserAccountLosts,
      @NonNull TextView txtPageUserAccountLostsCounter,
      @NonNull TextView txtPageUserAccountPhoneNumber,
      @NonNull TextView txtPageUserAccountPhoneNumberTitle,
      @NonNull TextView txtPageUserAccountUsername, @NonNull TextView txtPageUserAccountWins,
      @NonNull TextView txtPageUserAccountWinsCounter, @NonNull TextView txtPageUserAcoountXCoins) {
    this.rootView = rootView;
    this.btnPageUserAccountChangeInfo = btnPageUserAccountChangeInfo;
    this.btnPageUserAccountChangePassword = btnPageUserAccountChangePassword;
    this.btnPageUserAccountSignOut = btnPageUserAccountSignOut;
    this.imgPageUserAccountUserPic = imgPageUserAccountUserPic;
    this.imgPageUserAccountXCoinsLogo = imgPageUserAccountXCoinsLogo;
    this.imgbPageUserAccountBack = imgbPageUserAccountBack;
    this.txtPageUserAccountEmail = txtPageUserAccountEmail;
    this.txtPageUserAccountEmailTitle = txtPageUserAccountEmailTitle;
    this.txtPageUserAccountLosts = txtPageUserAccountLosts;
    this.txtPageUserAccountLostsCounter = txtPageUserAccountLostsCounter;
    this.txtPageUserAccountPhoneNumber = txtPageUserAccountPhoneNumber;
    this.txtPageUserAccountPhoneNumberTitle = txtPageUserAccountPhoneNumberTitle;
    this.txtPageUserAccountUsername = txtPageUserAccountUsername;
    this.txtPageUserAccountWins = txtPageUserAccountWins;
    this.txtPageUserAccountWinsCounter = txtPageUserAccountWinsCounter;
    this.txtPageUserAcoountXCoins = txtPageUserAcoountXCoins;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPageUserAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPageUserAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_page_user_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPageUserAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_pageUserAccount_changeInfo;
      Button btnPageUserAccountChangeInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnPageUserAccountChangeInfo == null) {
        break missingId;
      }

      id = R.id.btn_pageUserAccount_changePassword;
      Button btnPageUserAccountChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (btnPageUserAccountChangePassword == null) {
        break missingId;
      }

      id = R.id.btn_pageUserAccount_signOut;
      Button btnPageUserAccountSignOut = ViewBindings.findChildViewById(rootView, id);
      if (btnPageUserAccountSignOut == null) {
        break missingId;
      }

      id = R.id.img_pageUserAccount_userPic;
      ImageView imgPageUserAccountUserPic = ViewBindings.findChildViewById(rootView, id);
      if (imgPageUserAccountUserPic == null) {
        break missingId;
      }

      id = R.id.img_pageUserAccount_XCoinsLogo;
      ImageView imgPageUserAccountXCoinsLogo = ViewBindings.findChildViewById(rootView, id);
      if (imgPageUserAccountXCoinsLogo == null) {
        break missingId;
      }

      id = R.id.imgb_pageUserAccount_back;
      ImageButton imgbPageUserAccountBack = ViewBindings.findChildViewById(rootView, id);
      if (imgbPageUserAccountBack == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAccount_email;
      TextView txtPageUserAccountEmail = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAccountEmail == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAccount_emailTitle;
      TextView txtPageUserAccountEmailTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAccountEmailTitle == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAccount_losts;
      TextView txtPageUserAccountLosts = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAccountLosts == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAccount_lostsCounter;
      TextView txtPageUserAccountLostsCounter = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAccountLostsCounter == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAccount_phoneNumber;
      TextView txtPageUserAccountPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAccountPhoneNumber == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAccount_phoneNumberTitle;
      TextView txtPageUserAccountPhoneNumberTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAccountPhoneNumberTitle == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAccount_username;
      TextView txtPageUserAccountUsername = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAccountUsername == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAccount_wins;
      TextView txtPageUserAccountWins = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAccountWins == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAccount_winsCounter;
      TextView txtPageUserAccountWinsCounter = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAccountWinsCounter == null) {
        break missingId;
      }

      id = R.id.txt_pageUserAcoount_XCoins;
      TextView txtPageUserAcoountXCoins = ViewBindings.findChildViewById(rootView, id);
      if (txtPageUserAcoountXCoins == null) {
        break missingId;
      }

      return new ActivityPageUserAccountBinding((ConstraintLayout) rootView,
          btnPageUserAccountChangeInfo, btnPageUserAccountChangePassword, btnPageUserAccountSignOut,
          imgPageUserAccountUserPic, imgPageUserAccountXCoinsLogo, imgbPageUserAccountBack,
          txtPageUserAccountEmail, txtPageUserAccountEmailTitle, txtPageUserAccountLosts,
          txtPageUserAccountLostsCounter, txtPageUserAccountPhoneNumber,
          txtPageUserAccountPhoneNumberTitle, txtPageUserAccountUsername, txtPageUserAccountWins,
          txtPageUserAccountWinsCounter, txtPageUserAcoountXCoins);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
